
// NOTE: Do NOT comment out variables here. The loader that exposes these variables to JS has a bug and will break if you do.

// Functions are used here to generate some colors
@import './functions';
@import './palette';



// Functional colors
// FIXME: codebase still uses a mix of these and original palette values

$color-discreet: $color-grey;

$color-primary: $color-blue;
$color-warning: $color-yellow;
$color-error: $color-red;

$color-overlay: color-translucent($color-grey, 0.2);

$color-link: $color-primary;
$color-link-active: color-saturate($color-link);

$color-feedback-dark: color-translucent($color-dark, 0.05);
$color-feedback-light: color-translucent($color-white, 0.05);



// Font families
$font-sans: 'Source Sans', 'Open Sans', 'San Francisco', 'Helvetica Neue', 'Helvetica', 'Segoe UI', 'Segoe WP', 'Arial', sans-serif;
$font-serif: 'Droid Serif', 'Georgia', serif;
$font-mono: 'Menlo', 'Monaco', 'Segoe UI Mono', 'Droid Sans Mono', 'Consolas', monospace;
$font-display: $font-sans;

// Font sizes
$font-size-default: 16px;
$font-size-default-over-verylarge: 20px;

$font-size-small: 0.75em; // 12px
$font-size-big: 1.4em;
$font-size-massive: 2.0em;

$font-size-display: $font-size-big;
$font-size-uppercase: $font-size-small;
$font-size-mono: $font-size-small;



// Line heights
$line-height-tight: 1.25; // 20px
$line-height: 1.75; // 28px
$line-height-loose: 2;
$line-height-print: 1.6; // 28px

// Radiuses
$radius-tight: 2px;
$radius: 4px;
$radius-loose: 6px;



// Z stack
$z-splash: 1;
$z-main: 2;
$z-secondary: 5;
$z-tertiary: 8;
$z-debug: 400;

$z-titlebar: 10;
$z-panels: 20;
$z-overlay: 30;
$z-tabbar: 40;
$z-controls: 50;
$z-popovers: 70;
$z-tour: 80;
$z-indicators: 100;
$z-os: 110;



// Scaling
// FIXME: bad names - 1.04 is not "large" compared to 1
$scale-verysmall: 0.9;
$scale-small: 0.96;
$scale-normal: 1;
$scale-large: 1.04;
$scale-verylarge: 1.1;



// Pads, buffers etc. sizing

$separator: 1px;
$separator-double: $separator * 2;

$pad-tight-vertical: 2px;
$pad-tight-horizontal: 4px;
$pad-vertical: 4px;
$pad-horizontal: 8px;
$pad-loose-vertical: 8px;
$pad-loose-horizontal: 12px;

$buffer-verytight: 0.4em;
$buffer-tight: $buffer-verytight * 2; 	// 0.8em
$buffer: $buffer-tight * 2; 			// 1.6em
$buffer-loose: $buffer * 2; 			// 3.2em

$buffer-relative-tight: 2%;
$buffer-relative: 6%;



// Rhythm
// TODO: implement these
$rhythm-tight-half: 0.4em;
$rhythm-tight: 0.8em;
$rhythm-base: 1.6em;
$rhythm-loose: 3.2em;

// Transition durations
$transition-veryveryfast: 25ms;
$transition-veryfast: 75ms;
$transition-fast: 125ms;
$transition-medium: 300ms;
$transition-slow: 450ms;
$transition-slowish: 600ms;
$transition-veryslow: 900ms;
$transition-veryveryslow: 1200ms;

// Transition property sets
$transition-properties-style: opacity, color, background-color, border-color, box-shadow, text-shadow;
$transition-properties-common: transform, $transition-properties-style;
$transition-properties-transform: transform, width, height;
$transition-properties-position: transform, top, bottom, left, right;

// Easing functions
$easing-ease: ease;
$easing-snap: cubic-bezier(0, 0.5, 0.5, 1);
$easing-bounce: cubic-bezier(0, 0.5, 0.5, 1.05);
$easing-smooth: cubic-bezier(0.19, 1, 0.22, 1);

// Perspectives
$perspective-global: 600px;



// Some additional dimensions, as some will be needed by multiple components
$height-edit-controls: 6em;
$height-header: 3em;
// ...



// Content-oriented defined widths
$width-body-tight: 24em;
$width-body: 28em;
$width-body-loose: 36em;

// Defined screen widths in portrait
$width-iphone4: 320px;
$width-iphone5: $width-iphone4;
$width-iphone6: 375px;
$width-iphone6plus: 414px;
$width-ipad: 768px;
$width-ipadpro: 1024px;

// Defined screen widths in portrait
$height-iphone4: 480px;
$height-iphone5: 568px;
$height-iphone6: 667px;
$height-iphone6plus: 736px;
$height-ipad: 1024px;
$height-ipadpro: 1366px;



// Breakpoints
// NOTE: defining breakpoints in px gives more predictable control on devices, and avoids any issues when em is scaled
$breakpoint-tiny: 420px;
$breakpoint-small: 640px;
$breakpoint-smallish: 768px;
$breakpoint-medium: 960px;
$breakpoint-large: 1240px;
$breakpoint-verylarge: 1540px;
$breakpoint-ridiculous: 2048px;
$breakpoint-totally-ridiculous: 2480px;

// Paragraph widths
// NOTE
// - These match the breakpoints at 1rem
// - By defining these separately, we will get em-based column widths that scale with the root font size
$limit-tiny: (number($breakpoint-tiny) / number($font-size-default)) * 1em;
$limit-small: (number($breakpoint-small) / number($font-size-default)) * 1em;
$limit-smallish: (number($breakpoint-smallish) / number($font-size-default)) * 1em;
$limit-medium: (number($breakpoint-medium) / number($font-size-default)) * 1em;
$limit-large: (number($breakpoint-large) / number($font-size-default)) * 1em;
$limit-verylarge: (number($breakpoint-verylarge) / number($font-size-default)) * 1em;
$limit-ridiculous: (number($breakpoint-ridiculous) / number($font-size-default)) * 1em;
$limit-totally-ridiculous: (number($breakpoint-totally-ridiculous) / number($font-size-default)) * 1em;

// Viewport
$viewport-under-tiny: '(max-width: #{$breakpoint-tiny - 1px})';
$viewport-under-small: '(max-width: #{$breakpoint-small - 1px})';
$viewport-under-smallish: '(max-width: #{$breakpoint-smallish - 1px})';
$viewport-under-medium: '(max-width: #{$breakpoint-medium - 1px})';
$viewport-under-large: '(max-width: #{$breakpoint-large - 1px})';
$viewport-under-verylarge: '(max-width: #{$breakpoint-verylarge - 1px})';

$viewport-over-tiny: '(min-width: #{$breakpoint-tiny})';
$viewport-over-small: '(min-width: #{$breakpoint-small})';
$viewport-over-smallish: '(min-width: #{$breakpoint-smallish})';
$viewport-over-medium: '(min-width: #{$breakpoint-medium})';
$viewport-over-large: '(min-width: #{$breakpoint-large})';
$viewport-over-verylarge: '(min-width: #{$breakpoint-verylarge})';

$viewport-portrait: '(max-aspect-ratio: 1/1)';
$viewport-landscape: '(min-aspect-ratio: 1/1)';
